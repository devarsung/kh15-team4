<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="invite">
	<!-- 보드 초대장 보내기 -->
	<select id="boardInviteSequence" resultType="long">
		select board_invite_seq.nextval from dual
	</select>
	
	<insert id="createBoardInvite">
		insert into board_invite(
			board_invite_no, board_no, sender_no, receiver_no
		)
		values(
			#{boardInviteNo}, #{boardNo}, #{senderNo}, #{receiverNo}
		)
	</insert>
	
	<!-- 받은 보드 초대 목록 -->
	<select id="selectInviteViewList" resultType="InviteViewDto">
		select * from invite_view where receiver_no = #{receiverNo}
		<if test="boardInviteStatus != null">
			and board_invite_status = #{boardInviteStatus}
		</if>
		
		order by board_invite_no desc
	</select>
	
	<!-- 읽지 않은 초대장 -->
	<select id="unreadInviteCount" resultType="int">
		select count(*) from board_invite where receiver_no = #{accountNo} and board_invite_read = 'N'
	</select>
	
	<!-- 초대장 메시지 전부 읽음 처리 -->
	<update id="readInvite">
		update board_invite set board_invite_read = 'Y' where receiver_no = #{accountNo}
	</update>
	
	<!-- 초대 수락하기 -->
	<update id="acceptInvite">
		update board_invite set board_invite_status = 'ACCEPTED' where board_invite_no = #{boardInviteNo}
	</update>
	
	<!-- 초대 거절하기 -->
	<update id="rejectInvite">
		update board_invite set board_invite_status = 'REJECTED' where board_invite_no = #{boardInviteNo}
	</update>
	
	<!-- 거절 이력 시퀀스 -->
	<select id="rejectSequence" resultType="long">
		select invite_reject_seq.nextval from dual
	</select>
	
	<!-- 거절 이력 생성 -->
	<insert id="createInviteReject">
		insert into invite_reject(
			invite_reject_no, board_no, account_no, rejected_at
		)
		values(
			#{inviteRejectNo}, #{boardNo}, #{accountNo}, systimestamp
		)
	</insert>
	
</mapper>









